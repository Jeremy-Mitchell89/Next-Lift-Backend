# import * from './generated/prisma.graphql'
type SuccessMessage {
  message: String
}
type Mutation {
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  updateLifts(benchPress: Int, squat: Int, deadLift: Int, press: Int): User!
  createMove(
    name: String!
    description: String!
    primaryMuscleWorked: String!
    secondaryMuscleWorked: String
  ): Movement!
  deleteMovement(id: ID!): Movement
  updateMovement(
    id: ID!
    name: String
    description: String
    primaryMuscleWorked: String
    secondaryMuscleWorked: String
  ): Movement!

  createLog(title: String!, notes: String!): Log!
  createLogMove(name: String!, weight: [Int], reps: [Int]): Move!
  editLogMove(id: ID, weight: [Int], reps: [Int]): Move!
  signout: SuccessMessage
  deleteLog(id: ID!): Log
  deleteMove(id: ID!): Move
  createWeight(weight: Int!): Weight
  deleteWeight(id: ID!): Weight!
}
type Query {
  me: User
  movements(
    where: MovementWhereInput
    orderBy: MovementOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Movement]!
  myLogs(where: LogWhereInput, orderBy: LogOrderByInput): [Log]
  log(where: LogWhereUniqueInput!): Log
  logs(
    where: LogWhereInput
    orderBy: LogOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Log]!
  weights(
    where: WeightWhereInput
    orderBy: WeightOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Weight]!
  movement(where: MovementWhereUniqueInput!): Movement
}
